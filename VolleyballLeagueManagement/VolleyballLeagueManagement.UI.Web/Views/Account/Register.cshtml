@using VolleyballLeagueManagement.Common.Enums
@model VolleyballLeagueManagement.UsersAccounts.Contracts.ViewModels.UserViewModel

<h2>Rejestruj konto</h2>
<hr />

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-group">
        @Html.LabelFor(m => m.Login, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Login, new {@class = "form-control col-md-4"})
            <h4>@Html.ValidationMessageFor(model => model.Login, "", new { @class = "label label-danger col-md-offset-1" })</h4>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control col-md-4" })
            <h4>@Html.ValidationMessageFor(model => model.Email, "", new { @class = "label label-danger col-md-offset-1" })</h4>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control col-md-4" })
            <h4>@Html.ValidationMessageFor(model => model.Password, "", new { @class = "label label-danger col-md-offset-1" })</h4>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PasswordRepeat, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.PasswordFor(m => m.PasswordRepeat, new {@class = "form-control col-md-4"})
            <h4>@Html.ValidationMessageFor(model => model.PasswordRepeat, "", new { @class = "label label-danger col-md-offset-1" })</h4>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Phone, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Role, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.DropDownList("Role", EnumHelper.GetSelectList(typeof (Role)), new {@class = "form-control col-md-3"})
        </div>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.City, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Street, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Street, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.HomeNumber, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.HomeNumber, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PostCode, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Utwórz konto" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
